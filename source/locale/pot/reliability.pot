# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Apache Software Foundation
# This file is distributed under the same license as the Apache CloudStack Administration Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apache CloudStack Administration Documentation 4.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-08-22 13:55+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reliability.rst:18
msgid "System Reliability and High Availability"
msgstr ""

#: ../../reliability.rst:21
msgid "HA for Management Server"
msgstr ""

#: ../../reliability.rst:23
msgid "The CloudStack Management Server should be deployed in a multi-node configuration such that it is not susceptible to individual server failures. The Management Server itself (as distinct from the MySQL database) is stateless and may be placed behind a load balancer."
msgstr ""

#: ../../reliability.rst:28
msgid "Normal operation of Hosts is not impacted by an outage of all Management Serves. All guest VMs will continue to work."
msgstr ""

#: ../../reliability.rst:31
msgid "When the Management Server is down, no new VMs can be created, and the end user and admin UI, API, dynamic load distribution, and HA will cease to work."
msgstr ""

#: ../../reliability.rst:37
msgid "Management Server Load Balancing"
msgstr ""

#: ../../reliability.rst:39
msgid "CloudStack can use a load balancer to provide a virtual IP for multiple Management Servers. The administrator is responsible for creating the load balancer rules for the Management Servers. The application requires persistence or stickiness across multiple sessions. The following chart lists the ports that should be load balanced and whether or not persistence is required."
msgstr ""

#: ../../reliability.rst:46
msgid "Even if persistence is not required, enabling it is permitted."
msgstr ""

#: ../../reliability.rst:51
msgid "Source Port"
msgstr ""

#: ../../reliability.rst:51
msgid "Destination Port"
msgstr ""

#: ../../reliability.rst:51
msgid "Protocol"
msgstr ""

#: ../../reliability.rst:51
msgid "Persistence Required?"
msgstr ""

#: ../../reliability.rst:53
msgid "80 or 443"
msgstr ""

#: ../../reliability.rst:53
msgid "8080 (or 20400 with AJP)"
msgstr ""

#: ../../reliability.rst:53
msgid "HTTP (or AJP)"
msgstr ""

#: ../../reliability.rst:53
#: ../../reliability.rst:54
msgid "Yes"
msgstr ""

#: ../../reliability.rst:54
#: ../../reliability.rst:54
msgid "8250"
msgstr ""

#: ../../reliability.rst:54
msgid "TCP"
msgstr ""

#: ../../reliability.rst:55
#: ../../reliability.rst:55
msgid "8096"
msgstr ""

#: ../../reliability.rst:55
msgid "HTTP"
msgstr ""

#: ../../reliability.rst:55
msgid "No"
msgstr ""

#: ../../reliability.rst:58
msgid "In addition to above settings, the administrator is responsible for setting the 'host' global config value from the management server IP to load balancer virtual IP address. If the 'host' value is not set to the VIP for Port 8250 and one of your management servers crashes, the UI is still available but the system VMs will not be able to contact the management server."
msgstr ""

#: ../../reliability.rst:67
msgid "HA-Enabled Virtual Machines"
msgstr ""

#: ../../reliability.rst:69
#: ../../reliability.rst:86
msgid "The user can specify a virtual machine as HA-enabled. By default, all virtual router VMs and Elastic Load Balancing VMs are automatically configured as HA-enabled. When an HA-enabled VM crashes, CloudStack detects the crash and restarts the VM automatically within the same Availability Zone. HA is never performed across different Availability Zones. CloudStack has a conservative policy towards restarting VMs and ensures that there will never be two instances of the same VM running at the same time. The Management Server attempts to start the VM on another Host in the same cluster."
msgstr ""

#: ../../reliability.rst:79
#: ../../reliability.rst:96
msgid "HA features work with iSCSI or NFS primary storage. HA with local storage is not supported."
msgstr ""

#: ../../reliability.rst:84
msgid "HA for Hosts"
msgstr ""

#: ../../reliability.rst:101
msgid "Dedicated HA Hosts"
msgstr ""

#: ../../reliability.rst:103
msgid "One or more hosts can be designated for use only by HA-enabled VMs that are restarting due to a host failure. Setting up a pool of such dedicated HA hosts as the recovery destination for all HA-enabled VMs is useful to:"
msgstr ""

#: ../../reliability.rst:108
msgid "Make it easier to determine which VMs have been restarted as part of the CloudStack high-availability function. If a VM is running on a dedicated HA host, then it must be an HA-enabled VM whose original host failed. (With one exception: It is possible for an administrator to manually migrate any VM to a dedicated HA host.)."
msgstr ""

#: ../../reliability.rst:114
msgid "Keep HA-enabled VMs from restarting on hosts which may be reserved for other purposes."
msgstr ""

#: ../../reliability.rst:117
msgid "The dedicated HA option is set through a special host tag when the host is created. To allow the administrator to dedicate hosts to only HA-enabled VMs, set the global configuration variable ha.tag to the desired tag (for example, \"ha\\_host\"), and restart the Management Server. Enter the value in the Host Tags field when adding the host(s) that you want to dedicate to HA-enabled VMs."
msgstr ""

#: ../../reliability.rst:125
msgid "If you set ha.tag, be sure to actually use that tag on at least one host in your cloud. If the tag specified in ha.tag is not set for any host in the cloud, the HA-enabled VMs will fail to restart after a crash."
msgstr ""

#: ../../reliability.rst:132
msgid "Primary Storage Outage and Data Loss"
msgstr ""

#: ../../reliability.rst:134
msgid "When a primary storage outage occurs the hypervisor immediately stops all VMs stored on that storage device. Guests that are marked for HA will be restarted as soon as practical when the primary storage comes back on line. With NFS, the hypervisor may allow the virtual machines to continue running depending on the nature of the issue. For example, an NFS hang will cause the guest VMs to be suspended until storage connectivity is restored.Primary storage is not designed to be backed up. Individual volumes in primary storage can be backed up using snapshots."
msgstr ""

#: ../../reliability.rst:146
msgid "Secondary Storage Outage and Data Loss"
msgstr ""

#: ../../reliability.rst:148
msgid "For a Zone that has only one secondary storage server, a secondary storage outage will have feature level impact to the system but will not impact running guest VMs. It may become impossible to create a VM with the selected template for a user. A user may also not be able to save snapshots or examine/restore saved snapshots. These features will automatically be available when the secondary storage comes back online."
msgstr ""

#: ../../reliability.rst:155
msgid "Secondary storage data loss will impact recently added user data including templates, snapshots, and ISO images. Secondary storage should be backed up periodically. Multiple secondary storage servers can be provisioned within each zone to increase the scalability of the system."
msgstr ""

#: ../../reliability.rst:162
msgid "Database High Availability"
msgstr ""

#: ../../reliability.rst:164
msgid "To help ensure high availability of the databases that store the internal data for CloudStack, you can set up database replication. This covers both the main CloudStack database and the Usage database. Replication is achieved using the MySQL connector parameters and two-way replication. Tested with MySQL 5.1 and 5.5."
msgstr ""

#: ../../reliability.rst:172
msgid "How to Set Up Database Replication"
msgstr ""

#: ../../reliability.rst:174
msgid "Database replication in CloudStack is provided using the MySQL replication capabilities. The steps to set up replication can be found in the MySQL documentation (links are provided below). It is suggested that you set up two-way replication, which involves two database nodes. In this case, for example, you might have node1 and node2."
msgstr ""

#: ../../reliability.rst:180
msgid "You can also set up chain replication, which involves more than two nodes. In this case, you would first set up two-way replication with node1 and node2. Next, set up one-way replication from node2 to node3. Then set up one-way replication from node3 to node4, and so on for all the additional nodes."
msgstr ""

#: ../../reliability.rst:186
msgid "References:"
msgstr ""

#: ../../reliability.rst:188
msgid "`http://dev.mysql.com/doc/refman/5.0/en/replication-howto.html <http://dev.mysql.com/doc/refman/5.0/en/replication-howto.html>`_"
msgstr ""

#: ../../reliability.rst:190
msgid "`https://wikis.oracle.com/display/CommSuite/MySQL+High+Availability+and+Replication+Information+For+Calendar+Server <https://wikis.oracle.com/display/CommSuite/MySQL+High+Availability+and+Replication+Information+For+Calendar+Server>`_"
msgstr ""

#: ../../reliability.rst:194
msgid "Configuring Database High Availability"
msgstr ""

#: ../../reliability.rst:196
msgid "To control the database high availability behavior, use the following configuration settings in the file /etc/cloudstack/management/db.properties."
msgstr ""

#: ../../reliability.rst:200
msgid "**Required Settings**"
msgstr ""

#: ../../reliability.rst:202
msgid "Be sure you have set the following in db.properties:"
msgstr ""

#: ../../reliability.rst:204
msgid "``db.ha.enabled``: set to true if you want to use the replication feature."
msgstr ""

#: ../../reliability.rst:207
msgid "Example: ``db.ha.enabled=true``"
msgstr ""

#: ../../reliability.rst:209
msgid "``db.cloud.slaves``: set to a comma-delimited set of slave hosts for the cloud database. This is the list of nodes set up with replication. The master node is not in the list, since it is already mentioned elsewhere in the properties file."
msgstr ""

#: ../../reliability.rst:214
msgid "Example: ``db.cloud.slaves=node2,node3,node4``"
msgstr ""

#: ../../reliability.rst:216
msgid "``db.usage.slaves``: set to a comma-delimited set of slave hosts for the usage database. This is the list of nodes set up with replication. The master node is not in the list, since it is already mentioned elsewhere in the properties file."
msgstr ""

#: ../../reliability.rst:221
msgid "Example: ``db.usage.slaves=node2,node3,node4``"
msgstr ""

#: ../../reliability.rst:223
msgid "**Optional Settings**"
msgstr ""

#: ../../reliability.rst:225
msgid "The following settings must be present in db.properties, but you are not required to change the default values unless you wish to do so for tuning purposes:"
msgstr ""

#: ../../reliability.rst:229
msgid "``db.cloud.secondsBeforeRetryMaster``: The number of seconds the MySQL connector should wait before trying again to connect to the master after the master went down. Default is 1 hour. The retry might happen sooner if db.cloud.queriesBeforeRetryMaster is reached first."
msgstr ""

#: ../../reliability.rst:234
msgid "Example: ``db.cloud.secondsBeforeRetryMaster=3600``"
msgstr ""

#: ../../reliability.rst:236
msgid "``db.cloud.queriesBeforeRetryMaster``: The minimum number of queries to be sent to the database before trying again to connect to the master after the master went down. Default is 5000. The retry might happen sooner if db.cloud.secondsBeforeRetryMaster is reached first."
msgstr ""

#: ../../reliability.rst:241
msgid "Example: ``db.cloud.queriesBeforeRetryMaster=5000``"
msgstr ""

#: ../../reliability.rst:243
msgid "``db.cloud.initialTimeout``: Initial time the MySQL connector should wait before trying again to connect to the master. Default is 3600."
msgstr ""

#: ../../reliability.rst:246
msgid "Example: ``db.cloud.initialTimeout=3600``"
msgstr ""

#: ../../reliability.rst:250
msgid "Limitations on Database High Availability"
msgstr ""

#: ../../reliability.rst:252
msgid "The following limitations exist in the current implementation of this feature."
msgstr ""

#: ../../reliability.rst:255
msgid "Slave hosts can not be monitored through CloudStack. You will need to have a separate means of monitoring."
msgstr ""

#: ../../reliability.rst:258
msgid "Events from the database side are not integrated with the CloudStack Management Server events system."
msgstr ""

#: ../../reliability.rst:261
msgid "You must periodically perform manual clean-up of bin log files generated by replication on database nodes. If you do not clean up the log files, the disk can become full."
msgstr ""

